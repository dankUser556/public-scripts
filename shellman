#!/bin/bash
#
# ~Dank Shell Manager~
# 

# Vars
SHELLMAN_DIR=${HOME}/.local/share/shellman
SHELL_STATUS=${SHELLMAN_DIR}/shellstatus
SHELL_LOG=${SHELLMAN_DIR}/shellman.log
PARENT_PROCESS_PID=$PPID
PARENT_PROCESS=

# Initial shell status
XSERVER_RUNNING=false
SHELL_COUNT=0

# Option flags
SHELLMAN_DEBUG=false
LOGIN=false
LOGOUT=false
REINITIALIZE=false
DISPLAY_STATUS=false
REGISTER_XORG_INSTANCE=false
REGISTER_XORG_HALT=false
VERBOSITY=false

# Identify parent process
PARENT_PROCESS=$(awk ' $2 ~ parentPid { print $11 }	' parentPid="$PARENT_PROCESS_PID" <(ps -aux | grep $PARENT_PROCESS_PID))

# Functions
function logEntry() {
	local LOG_MESSAGE=$@

	date >> ${SHELL_LOG}	
	echo ${LOG_MESSAGE[@]} >> ${SHELL_LOG}
}
function retrieveCurrentConfig() {
	# Import current shell status
	if ! test -e ${SHELL_STATUS}; then
		echo "Initializing ${SHELL_STATUS} file."
		touch ${SHELL_STATUS}
		updateShellStatus
	else
		XSERVER_RUNNING=$(awk '/XSERVER_RUNNING/ { print $2 }' ${SHELL_STATUS})
		SHELL_COUNT=$(awk '/SHELL_COUNT/ { print $2 }' ${SHELL_STATUS})
	fi
}
function reinitializeStatus() {
	date >> ${SHELL_LOG}
	echo Reinitializing Shell Status file. >> ${SHELL_LOG}
	echo XSERVER_RUNNING false > $SHELL_STATUS
	echo SHELL_COUNT 0 >> $SHELL_STATUS
}
function registerXorgInstance() {
	if [ "$XSERVER_RUNNING" == true ]; then
		date >> $SHELL_LOG
		echo registerXorgInstance function called when XSERVER_RUNNING = true! >> $SHELL_LOG
	else
		XSERVER_RUNNING=true
	fi
}
function registerXorgHalted() {
	XSERVER_RUNNING=false
	updateShellStatus
}
function shellLogin() {
	local CALLER=$@
	
	((SHELL_COUNT++))
	updateShellStatus
	
	logEntry "Login, called by: ${PARENT_PROCESS} PID: ${PARENT_PROCESS_PID}"
}
function shellLogout() {
	if [ "${SHELL_COUNT}" == 1 ]; then
		SHELL_COUNT=0;
	elif test ${SHELL_COUNT} -gt 0; then
		((SHELL_COUNT--))
	else
		date >> $SHELL_LOG
		echo "Logout called when SHELL_COUNT less than 1. Check shellman config." >> $SHELL_LOG
	fi
	updateShellStatus
}
function updateShellStatus() {
	echo "XSERVER_RUNNING" ${XSERVER_RUNNING} > ${SHELL_STATUS}
	echo "SHELL_COUNT" ${SHELL_COUNT} >> ${SHELL_STATUS}
}
function debugShellman() {
	if ! [ $SHELLMAN_DEBUG == false ]; then
		echo "Debug function called"
		echo
		echo Internal Variables:
		echo XSERVER_RUNNING ${XSERVER_RUNNING}
		echo SHELL_COUNT ${SHELL_COUNT}
	fi
}
function main() {
	if [ "$REINITIALIZE" == true ]; then
		reinitializeStatus;
	fi
	retrieveCurrentConfig
	if [ "$LOGIN" == true ] && [ "$LOGOUT" == true ]; then
		echo "Choose to login or logout."
		date >> $SHELL_LOG
		echo "Attempted to login and logout in same call." >> $SHELL_LOG
		echo && exit;
	fi
	
	if [ "$LOGOUT" == true ]; then
		shellLogout;
	elif [ "$LOGIN" == true ]; then
		shellLogin $0;
	fi
	if [ "$REGISTER_XORG_INSTANCE" == true ]; then
		registerXorgInstance
	elif [ "$REGISTER_XORG_HALT" == true ]; then
		registerXorgHalted
	fi
	if [ "$SHELLMAN_DEBUG" == true ]; then
		debugShellman;
	fi;
	
	updateShellStatus;
	exit;
}

#Initialize config directory
if test ! -d "${SHELLMAN_DIR}"; then
	echo "Initializing config directory in ${HOME}/.local/share"
	mkdir "${SHELLMAN_DIR}"
fi

#Parse args
if test ! $# -eq 0; then
	for ARGUMENT in "$@"; do
		case $ARGUMENT in
			-s|--status)
				retrieveCurrentConfig
				echo "Current shellman status:"
				echo "XSERVER_RUNNING: ${XSERVER_RUNNING}"
				echo "SHELL_COUNT: ${SHELL_COUNT}"
				echo
				exit
				;;
			-d|--debug)
				SHELLMAN_DEBUG=true
				;;
			-x|--registerxorg)
				REGISTER_XORG_INSTANCE=true
				;;
			-h|--)
				REGISTER_XORG_HALT=true
				;;
			-l|--login)
				LOGIN=true
				;;
			-o|--logout)
				LOGOUT=true
				;;
			-r|--reinitialize)
				echo Reinit flag found
				REINITIALIZE=true
				;;
			-v|--verbose)
				VERBOSITY=true
				;;
			*)
				date >> ${SHELL_LOG}
				echo "Shellman called with unknown args!" >> ${SHELL_LOG}
				echo && exit
				;;
		esac
	done
else
	date >> ${SHELL_LOG}
	echo "No arguments passed. Exiting" >> ${SHELL_LOG}
	if [ ${SHELLMAN_DEBUG} == true ]; then
		debugShellman
	fi
	echo && exit;
fi

main
